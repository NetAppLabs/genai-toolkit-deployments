apiVersion: apps/v1
kind: Deployment
metadata:
  name: genai-toolkit-rag-api
  labels:
    app: genai-toolkit-rag-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: genai-toolkit-rag-api
  template:
    metadata:
      labels:
        app: genai-toolkit-rag-api
    spec:
      initContainers:
        - name: wait-for-api
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until wget -qO- http://genai-toolkit-api.{{ .Release.Namespace }}.svc.cluster.local:8001/health; do echo waiting for genai-toolkit-api; sleep 2; done']
      containers:
        - name: genai-toolkit-rag-api
          image: {{ .Values.dockerRegistry }}genai-toolkit-rag-api:{{ .Chart.Version }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8002
              protocol: TCP
              name: http
            - containerPort: 8003
              protocol: TCP
              name: sockets
          env:
            - name: ROOT_DIR
              value: {{ .Values.volumesMountPoint }}
            - name: JWT_SECRET_KEY
              value: "whatever"
            - name: DB_CONNECTION_STRING
              value: {{ if .Values.db.connectionString }}
                        {{ .Values.db.connectionString | quote }}
                      {{ else }}
                        {{ printf "Host=postgres.%s.svc.cluster.local;Port=5432;Database=genai-toolkit-db;Username=admin;Password=admin" .Release.Namespace }}
                      {{ end }}
            - name: KEYCLOAK_HOST
              value: http://genai-toolkit-keycloakx-http.{{ .Release.Namespace }}.svc.cluster.local
            - name: KEYCLOAK_AUTH_PATH
              value: /auth
            - name: KEYCLOAK_REALM
              value: genai-toolkit
          volumeMounts:
            {{- if .Values.nfs.volumes }}
              {{- range $index, $nfs_volumes := (splitList ";" .Values.nfs.volumes) }}
                {{- $nfs_volume_parts := splitList ":" $nfs_volumes }}
                {{- $concatString := printf "%s/%s%s" $.Values.volumesMountPoint $.Values.cloudStorageProvider (index $nfs_volume_parts 1) }}
            - name: nfs-volume-{{ $index }}
              mountPath: {{ $concatString }}
              {{- end }}
            {{- else }}
              {{- if .Values.smb.volumes }}
                {{- range $index, $smb_volume_connection_string := (splitList ";" .Values.smb.volumes) }}
                  {{- $volume_parts := splitList "/" $smb_volume_connection_string }}
                  {{- $new_parts := splitList "?" (last $volume_parts) }}
                  {{- $volume_mount_point := printf "%s/%s/%s" $.Values.volumesMountPoint $.Values.cloudStorageProvider (index $new_parts 0) }}
            - name: smb-volume-{{ $index }}
              mountPath: {{ $volume_mount_point }}
                {{- end }}
              {{- else if gt (len .Values.localVolumePaths) 0 }}
                {{- range $index, $local_dirs := (splitList ";" .Values.localVolumePaths) }}
            - name: nfs-volume-{{ $index }}
              mountPath: {{ $.Values.volumesMountPoint }}/ontap/{{ (splitList "/" $local_dirs | last) }}
                {{- end }}
              {{- end }}
            {{- end }}
      volumes:
        {{- if .Values.nfs.volumes }}
          {{- range $index, $nfs_volumes := (splitList ";" .Values.nfs.volumes) }}
            {{- $nfs_volume_parts := splitList ":" $nfs_volumes }}
        - name: nfs-volume-{{ $index }}
          persistentVolumeClaim:
            claimName: netapp-nfs-pvc-{{ $index }}
          {{- end }}
        {{- else }}
          {{- if .Values.smb.volumes }}
            {{- range $index, $smb_volume_connection_string := (splitList ";" .Values.smb.volumes) }}
        - name: smb-volume-{{ $index }}
          persistentVolumeClaim:
            claimName: netapp-smb-volume-pvc-{{ $index }}
            {{- end }}
          {{- else if gt (len .Values.localVolumePaths) 0 }}
            {{- range $index, $local_dirs := (splitList ";" .Values.localVolumePaths) }}
        - name: nfs-volume-{{ $index }}
          hostPath:
            path: {{ $local_dirs }}
            {{- end }}
          {{- end }}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: genai-toolkit-rag-api
  labels:
    app: genai-toolkit-rag-api
spec:
  selector:
    app: genai-toolkit-rag-api
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 8002
      name: http
    - protocol: TCP
      port: 8003
      targetPort: 8003
      name: sockets