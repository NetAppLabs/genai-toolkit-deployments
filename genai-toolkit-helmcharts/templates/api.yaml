apiVersion: apps/v1
kind: Deployment
metadata:
  name: genai-toolkit-api
  labels:
    app: genai-toolkit-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: genai-toolkit-api
  template:
    metadata:
      labels:
        app: genai-toolkit-api
    spec:
      {{- if or (eq .Values.apiv2.secretStore "iam") (eq .Values.apiv2.secretStore "kubernetes") }}
      serviceAccountName: {{ .Values.apiv2.serviceAccount.name | default "genai-toolkit-api-sa" }}
      {{- end }}
      initContainers:
        - name: wait-for-keycloak
          imagePullPolicy: IfNotPresent
          image: busybox
          command: ['sh', '-c', 'until wget -qO- http://genai-toolkit-keycloakx-http.{{ .Release.Namespace }}.svc.cluster.local/auth; do echo waiting for keycloak; sleep 2; done']
      containers:
        - name: genai-toolkit-api
          {{- if .Values.devTag }}
          image: {{ .Values.dockerRegistry }}genai-toolkit-api:{{ .Values.devTag }}
          {{- else }}
          image: {{ .Values.dockerRegistry }}genai-toolkit-api:{{ .Chart.Version }}
          {{- end }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8001
              protocol: TCP
          env:
            - name: ROOT_DIR
              value: {{ .Values.volumesMountPoint }}
            - name: DB_CONNECTION_STRING
              value: {{ if .Values.db.connectionString }}
                        {{ .Values.db.connectionString | quote }}
                      {{ else }}
                        {{ printf "Host=postgres.%s.svc.cluster.local;Port=5432;Database=genai-toolkit-db;Username=admin;Password=admin" .Release.Namespace }}
                      {{ end }}
            - name: RAGAS_HOST
              value: http://genai-toolkit-rag-api.{{ .Release.Namespace }}.svc.cluster.local:8002
            - name: KEYCLOAK_HOST
              value: http://genai-toolkit-keycloakx-http.{{ .Release.Namespace }}.svc.cluster.local
            - name: KEYCLOAK_AUTH_PATH
              value: /auth
            - name: KEYCLOAK_REALM
              value: genai-toolkit
            - name: KEYCLOAK_EXPOSED_HOST
              value: http://localhost
              {{- if .Values.localDev }}
            - name: KEYCLOAK_CLIENT_SECRET
              value: super-secret-password
              {{- else }}
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: client-secret
                  key: CLIENT_SECRET
              {{- end }}
            - name: KEYCLOAK_CLIENT_ID
              value: genai-toolkit-client
            {{- if .Values.aws}}
            - name: AWS_REGION
              value: "{{ .Values.aws.region }}"
            - name: AWS_ACCESS_KEY_ID
              value: "{{ .Values.aws.accessKeyId }}"
            - name: AWS_SECRET_ACCESS_KEY
              value: "{{ .Values.aws.secretKey }}"
            - name: AWS_SESSION_TOKEN
              value: "{{ .Values.aws.sessionToken }}"
            {{- end }}
            - name: APIV2_SECRET_STORE
              value: "{{ .Values.apiv2.secretStore }}"
            - name: CLOUD_ENV
              value: "{{ .Values.apiv2.cloudEnv }}"
            - name: API_KEY_LIFETIME_DAYS
              value: "{{ .Values.apiv2.apiKeyLifetimeDays }}"            
            - name: TOOLKIT_VERSION
              value: {{ .Chart.Version | quote }}
            {{- if .Values.smbVolumes }}
            - name: APIV2_VOLUME_MAPPING
              value: {{ $allConcatStrings := "" -}}
                {{- range $index, $smb_volume_connection_string := (splitList ";" .Values.smbVolumes) }}
                  {{- $volume_parts := splitList "/" $smb_volume_connection_string }}
                    {{- $new_parts := splitList "?" (last $volume_parts)}}
                  {{- $concatString :=  printf "%s;/%s/%s" $smb_volume_connection_string $.Values.cloudStorageProvider (index $new_parts 0)}}
                  {{- $allConcatStrings = printf "%s%s__" $allConcatStrings $concatString -}}
                {{- end -}}
                {{- $allConcatStrings | trimSuffix "__" }}
            {{- else if .Values.apiv2.volumeMapping }}
            - name: APIV2_VOLUME_MAPPING
              value: {{ .Values.apiv2.volumeMapping -}}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: keycloak-realm-json
              mountPath: /app/kubernetes/files/genai-toolkit-realm.json
              subPath: genai-toolkit-realm.json
              readOnly: true
          {{- if ne .Values.cloudProvider "local" }}
            {{- range $index, $nfs_volumes := (splitList ";" .Values.nfs.volumes) }}
              {{- $nfs_volume_parts := splitList ":" $nfs_volumes }}
              {{- $concatString :=  printf "%s/%s%s" $.Values.volumesMountPoint $.Values.cloudProvider (index $nfs_volume_parts 1)}}
          - name: nfs-volume-{{ $index }}
            mountPath: {{ $concatString }}
            {{- end }}
          {{- else }}
            {{- if .Values.smbVolumes }}
              {{- range $index, $smb_volume_connection_string := (splitList ";" $.Values.smbVolumes) }}
                {{- $volume_parts := splitList "/" $smb_volume_connection_string }}
                {{- $new_parts := splitList "?" (last $volume_parts)}}
                {{- $volume_mount_point := "" }}
                    {{- $volume_mount_point = printf "%s/%s/%s" $.Values.volumesMountPoint $.Values.cloudStorageProvider (index $new_parts 0)}}
            - name: volume-{{ $index }}
              mountPath: {{ $volume_mount_point }}
              {{- end }}
            {{- else }}
              {{- range $index, $local_dirs := (splitList ";" .Values.localVolumePaths) }}
            - name: nfs-volume-{{ $index }}
              mountPath: {{ $.Values.volumesMountPoint }}/ontap/{{ (splitList "/" $local_dirs | last) }}
              {{- end }}
            {{- end }}
          {{- end }}
      volumes:
        - name: keycloak-realm-json
          secret:
            secretName: {{ .Release.Name }}-realm-secret
      {{- if ne .Values.cloudProvider "local" }}
        {{- range $index, $nfs_volumes := (splitList ";" .Values.nfs.volumes) }}
          {{- $nfs_volume_parts := splitList ":" $nfs_volumes }}
      - name: nfs-volume-{{ $index }}
        persistentVolumeClaim:
          claimName: netapp-nfs-pvc-{{ $index }}
        {{- end }}
      {{- else }}
        {{- if .Values.smbVolumes }}
          {{- range $index, $smb_volume_connection_string := (splitList ";" $.Values.smbVolumes) }}
        - name: volume-{{ $index }}
          persistentVolumeClaim:
            claimName: netapp-smb-volume-pvc-{{ $index }}
          {{- end }}
        {{- else }}
          {{- range $index, $local_dirs := (splitList ";" .Values.localVolumePaths) }}
        - name: nfs-volume-{{ $index }}
          hostPath:
            path: {{ $local_dirs }}
          {{- end }}
        {{- end }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: genai-toolkit-api
  labels:
    app: genai-toolkit-api
spec:
  selector:
    app: genai-toolkit-api
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001