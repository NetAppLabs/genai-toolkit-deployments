db:
  connectionString: ""

nfs:
  volumes: ""

smb:
  volumes: ""

cloudStorageProvider: "ontap"

apiv2:
  volumeMapping: ""
  secretStore:
  serviceAccount:
    name: "genai-toolkit-api-sa"
    annotations:
      eks.amazonaws.com/role-arn: ""
    labels: {}
  apiKeyLifetimeDays:

aws:
  region: us-east-1
  accessKeyId: test
  secretKey: test
  sessionToken:


#Do not change unless you know what you are doing
volumesMountPoint: "/root_dir"
dockerRegistry: "us-docker.pkg.dev/gcnv-ai-dev/genai-toolkit/"
image:
  tag: ""

keycloakx:
  command:
    - "/opt/keycloak/bin/kc.sh"
    - "start"
    - "--http-port=8080"
    - "--hostname-strict=false"

  database:
    vendor: postgres
    hostname: postgres.default.svc.cluster.local
    port: 5432
    database: genai-toolkit-db
    username: admin
    password: admin

  extraEnv: |
    - name: KEYCLOAK_ADMIN
      value: admin
    - name: KEYCLOAK_ADMIN_PASSWORD
      value: admin
    - name: KC_DB_SCHEMA
      value: keycloak
    - name: JAVA_OPTS_APPEND
      value: >-
        -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=/genai-toolkit-realm/genai-toolkit-realm.json -Dkeycloak.migration.replace-placeholders=true -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.migration.strategy=IGNORE_EXISTING

  extraVolumes: |
    - name: genai-toolkit-realm-secret
      secret:
        secretName: genai-toolkit-realm-secret

  extraVolumeMounts: |
    - name: genai-toolkit-realm-secret
      mountPath: "/genai-toolkit-realm/"
      readOnly: true

  extraInitContainers: |
    - name: generate-client-secret
      image: alpine:3.16
      env:
        - name: PGPASSWORD
          value: admin
      command: ["/bin/sh", "-c"]
      args:
        - |
          set -e
          echo "Generating or retrieving client secret..."
          apk add --no-cache openssl curl postgresql-client && \
          echo "Installed dependencies." && \
          curl -LO "https://dl.k8s.io/release/v1.31.1/bin/linux/amd64/kubectl" && \
          chmod +x ./kubectl && \
          mv ./kubectl /usr/local/bin/kubectl && \
          echo "Downloaded and installed kubectl."

          # Check if the Keycloak schema exists in PostgreSQL
          SCHEMA_EXISTS=$(psql -h postgres.default.svc.cluster.local -U admin -d genai-toolkit-db -t -c "SELECT schema_name FROM information_schema.schemata WHERE schema_name = 'keycloak';" | xargs)

          if [ -z "$SCHEMA_EXISTS" ]; then
            echo "Keycloak schema does not exist. Assuming fresh start."
            CLIENT_SECRET=$(openssl rand -base64 32)
            echo "Client secret generated for fresh start."
          else
            # Check if the client secret already exists in PostgreSQL
            EXISTING_SECRET=$(psql -h postgres.default.svc.cluster.local -U admin -d genai-toolkit-db -t -c "SELECT TRIM(secret) FROM keycloak.client WHERE client_id = 'genai-toolkit-client';" | xargs)

            if [ -z "$EXISTING_SECRET" ]; then
              # If the secret does not exist, generate a new one
              CLIENT_SECRET=$(openssl rand -base64 32)
              echo "Client secret generated."
            else
              # Use the existing secret
              CLIENT_SECRET=$EXISTING_SECRET
              echo "Using existing client secret from PostgreSQL."
            fi
          fi

          cp /realm-secret/genai-toolkit-realm.json genai-toolkit-realm.json
          echo "Copied genai-toolkit-realm.json from Secret."

          sed -i "s|super-secret-password|$CLIENT_SECRET|g" genai-toolkit-realm.json
          echo "Updated genai-toolkit-realm.json with client secret."

          kubectl create secret generic genai-toolkit-realm-secret \
            --from-file=genai-toolkit-realm.json=genai-toolkit-realm.json \
            --dry-run=client -o yaml | kubectl apply -f -
          echo "genai-toolkit-realm-secret updated with modified genai-toolkit-realm.json."

          kubectl create secret generic client-secret \
            --from-literal=CLIENT_SECRET="$(echo -n $CLIENT_SECRET)" \
            --dry-run=client -o yaml | kubectl apply -f -
          echo "client-secret Kubernetes Secret created or updated."
      volumeMounts:
        - name: genai-toolkit-realm-secret
          mountPath: /realm-secret
    - name: init-db-schema
      image: postgres:13
      env:
        - name: PGPASSWORD
          value: admin
      command:
        - sh
      args:
        - -c
        - |
          echo "Waiting for the database to be ready..."
          until psql -h postgres.default.svc.cluster.local -U admin -d genai-toolkit-db -c '\q'; do
            >&2 echo "Postgres is unavailable - sleeping"
            sleep 5
          done
          echo "Postgres is up - creating schema if it doesn't exist..."
          psql -h postgres.default.svc.cluster.local -U admin -d genai-toolkit-db -c 'CREATE SCHEMA IF NOT EXISTS keycloak;'

  serviceAccount:
    create: false
    name: secret-manager

searxng:
  searxng:
    config:
      use_default_settings: true
      outgoing:
        request_timeout: 7.0
      search:
        formats:
          - json
      engines:
        - name: bing
          disabled: false
        - name: wikipedia
          disabled: true
        - name: github
          disabled: true
        - name: stackoverflow
          disabled: true
        - name: ahmia
          disabled: true
        - name: arch linux wiki
          disabled: true
        - name: artic
          disabled: true
        - name: arxiv
          disabled: true
        - name: bandcamp
          disabled: true
        - name: bing images
          disabled: true
        - name: bing news
          disabled: true
        - name: bing videos
          disabled: true
        - name: openverse
          disabled: true
        - name: chefkoch
          disabled: true
        - name: currency
          disabled: true
        - name: deviantart
          disabled: true
        - name: docker hub
          disabled: true
        - name: wikidata
          disabled: true
        - name: duckduckgo
          disabled: true
        - name: etymonline
          disabled: true
        - name: flickr
          disabled: true
        - name: genius
          disabled: true
        - name: gentoo
          disabled: true
        - name: google images
          disabled: true
        - name: google news
          disabled: true
        - name: google videos
          disabled: true
        - name: google scholar
          disabled: true
        - name: hoogle
          disabled: true
        - name: kickass
          disabled: true
        - name: lemmy communities
          disabled: true
        - name: lemmy users
          disabled: true
        - name: lemmy posts
          disabled: true
        - name: lemmy comments
          disabled: true
        - name: z-library
          disabled: true
        - name: library of congress
          disabled: true
        - name: lingva
          disabled: true
        - name: mastodon users
          disabled: true
        - name: mastodon hashtags
          disabled: true
        - name: mdn
          disabled: true
        - name: mixcloud
          disabled: true
        - name: mankier
          disabled: true
        - name: openairedatasets
          disabled: true
        - name: openairepublications
          disabled: true
        - name: openstreetmap
          disabled: true
        - name: pdbe
          disabled: true
        - name: photon
          disabled: true
        - name: pinterest
          disabled: true
        - name: piped
          disabled: true
        - name: piped.music
          disabled: true
        - name: piratebay
          disabled: true
        - name: podcastindex
          disabled: true
        - name: pubmed
          disabled: true
        - name: pypi
          disabled: true
        - name: qwant
          disabled: true
        - name: qwant news
          disabled: true
        - name: qwant images
          disabled: true
        - name: qwant videos
          disabled: true
        - name: radio browser
          disabled: true
        - name: sepiasearch
          disabled: true
        - name: soundcloud
          disabled: true
        - name: askubuntu
          disabled: true
        - name: superuser
          disabled: true
        - name: solidtorrents
          disabled: true
        - name: torch
          disabled: true
        - name: unsplash
          disabled: true
        - name: yahoo news
          disabled: true
        - name: youtube
          disabled: true
        - name: dailymotion
          disabled: true
        - name: vimeo
          disabled: true
        - name: wikinews
          disabled: true
        - name: wiktionary
          disabled: true
        - name: wikicommons.images
          disabled: true
        - name: wikicommons.videos
          disabled: true
        - name: wikicommons.audio
          disabled: true
        - name: wikicommons.files
          disabled: true
        - name: dictzone
          disabled: true
        - name: mymemory translated
          disabled: true
        - name: wordnik
          disabled: true
        - name: tootfinder
          disabled: true
        - name: wallhaven
          disabled: true
        - name: wttr.in
          disabled: true
        - name: brave
          disabled: true
        - name: brave.images
          disabled: true
        - name: brave.videos
          disabled: true
        - name: brave.news
          disabled: true
        - name: bt4g
          disabled: true